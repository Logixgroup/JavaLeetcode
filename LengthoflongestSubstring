/*
 * non repeating characters from Longest substring
 */

package pakage;
import java.util.HashSet;
public class Solution {

public int MaxLongestSubstring (String s) {

int a_pointer = 0;
int b_pointer = 0;
int max = 0;

HashSet <Character> hash_set = new HashSet();

//abcbbcab


while (b_pointer< s.length()) {

if (!hash_set.contains(s.charAt(b_pointer))){

hash_set.add(s.charAt(b_pointer));
b_pointer++;
max = Math.max(hash_set.size(), max);
}
else
{

hash_set.remove(s.charAt(a_pointer));
a_pointer++;
}
}


//System.out.println(hash_set);

//return hash_set.toString() ;
return max;

}


public static void main(String args[]) {
// Your code goes here
String s = "abcbbcabd";
Solution ob = new Solution();
System.out.println(ob.MaxLongestSubstring(s));
}

}
